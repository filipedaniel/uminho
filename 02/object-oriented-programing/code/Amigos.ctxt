#BlueJ class context
comment0.params=
comment0.target=Amigos()
comment0.text=\n\ Construtor\ vazio\n
comment1.params=amg
comment1.target=Amigos(Amigo)
comment1.text=\n\ Construtor\ parametrizado\n
comment10.params=
comment10.target=int\ totalAmigos()
comment10.text=\n\ Devolve\ o\ n\u00FAmeto\ total\ de\ elementos\ de\ um\ conjunto\ de\ elemnetos\ da\ classe\ Amigo.\n
comment11.params=
comment11.target=Amigos\ clone()
comment12.params=obj
comment12.target=boolean\ equals(java.lang.Object)
comment13.params=
comment13.target=java.lang.String\ toString()
comment2.params=amgs
comment2.target=Amigos(Amigos)
comment2.text=\n\ Construtor\ por\ c\u00F3pia\n
comment3.params=
comment3.target=java.util.ArrayList\ getAmigos()
comment4.params=l
comment4.target=void\ setAmigos(java.util.ArrayList)
comment5.params=mail
comment5.target=boolean\ existeAmigo(java.lang.String)
comment5.text=\n\ Dado\ um\ e-mail\ correspondente\ a\ um\ amigo\ verifica\ se\ ele\ existe\ num\ conjunto.\n
comment6.params=mail
comment6.target=Amigo\ getAmigo(java.lang.String)
comment6.text=\n\ Dado\ um\ e-mail\ devolve\ o\ Amigo\ correspondente\n
comment7.params=a
comment7.target=void\ addAmigo(Amigo)
comment7.text=\n\ Addiciona\ um\ Amigo\ a\ um\ conjunto.\n
comment8.params=mail
comment8.target=void\ removeAmigo(java.lang.String)
comment8.text=\n\ Remove\ um\ Amigo\ de\ um\ conjunto.\n
comment9.params=
comment9.target=java.util.TreeMap\ ordenaPorNome()
comment9.text=\n\ Ordena\ um\ conjunto\ de\ elementos\ da\ classe\ Amigo\ por\ ordem\ alfab\u00E9tica.\n
numComments=14
